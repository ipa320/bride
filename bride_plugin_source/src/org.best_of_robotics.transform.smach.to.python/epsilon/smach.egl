#!/usr/bin/python
import roslib
roslib.load_manifest('[%=sm.name%]')
import rospy
import smach
import smach_ros
from smach_ros import SimpleActionState

###TEST
#[%=sm.name%]
#
[%for(actionclient in sm.actionclients) {%]
#	[%=actionclient.name%]
[%}%]
[%for(actionsstate in sm.actionsstates) {%]
#	[%=actionsstate.name%]
[%}%]
####

class SkillImplementation():
    def __init__(self):
    	self.sm = smach.StateMachine()
    	with self.sm:
[%for(actionsstate in sm.actionsstates) {%]
			self.sm.add('[%=actionsstate.name%]',
						SimpleActionState('[%=actionsstate.clientname.actionname%]', 
											'[%=actionsstate.clientname.actiontype%]'),
						transitions={[%for(trans in actionsstate.transitions){%]'[%=trans.outcome%]':'[%=trans.state.name%]', [%}%] }
			
[%}%]

if __name__ == "__main__":
    rospy.init_node('skill_template')
    