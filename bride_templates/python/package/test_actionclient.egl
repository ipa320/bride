#!/usr/bin/env python
import roslib; roslib.load_manifest('[%=package.name.replace(" ", "_")%]')
import rospy

import actionlib
import yaml
[%
var strs : Sequence;
strs = action.ActionType.split('::');
%]
from [%=strs[0]%].msg import *

[%=out.startPreserve("#", "#", "Testcase goal for " + action.name.replace(" ", "_"), true)%]
#BIG TODO this is not autogenerated yet. Use ConfigFileCreator for that
test_[%=action.name.replace(" ", "_")%]_goal = """
target_frame: 'arm_right_6_link'
goal_pose:
  header:
    seq: 0
    stamp:
      secs: 36
      nsecs: 274000000
    frame_id: '274000000'
  pose:
    position: 
      x: 0.317173641712
      y: 0.0035895957585
      z: 1.17213597716
    orientation: 
      x: -0.203860456369
      y: -0.754499179876
      z: 0.339361751025
      w: 0.523455350376
linVel: 0.0
"""
[%=out.stopPreserve()%]

def [%=action.name.replace(" ", "_")%]_client():
    client = actionlib.SimpleActionClient('/[%=action.name.replace(" ", "_")%]', [%=strs[1]%]Action)
    client.wait_for_server()
    
    goal =[%=strs[1]%]Goal()
    genpy.message.fill_message_args(goal, yaml.load(test_[%=action.name.replace(" ", "_")%]_goal))

    client.send_goal(goal)
    client.wait_for_result()

    return client.get_result()


if __name__ == "__main__":
    rospy.init_node('[%=action.name.replace(" ", "_")%]_test')
    print [%=action.name.replace(" ", "_")%]_client()